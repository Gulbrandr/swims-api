openapi: 3.0.0
info:
  description: |-


    # Authentication

    # Request
      Each API request must contain headers that identify the API version, vendor and club credentials, and the API username. All requests must be submitted from one of your servers to the USA Swimming server. This is to ensure that security keys are never shared with a client application such as a web browser. All requests must be submitted with HTTPS (SSL) encryption. HTTP is not supported. TLS 1.2 is required.

    <!-- ReDoc-Inject: <security-definitions> -->
  version: 1.0.0
  title: Swims USA External REST API
  termsOfService: http://swagger.io/terms/
  contact:
    email: helpdesk@swims.org
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
tags:
  - name: Security
    description: Access to Security Endpoints
  - name: Athlete
    description: Access to Athlete Details
  - name: Video
    description: Access to Video Streams

paths:
  /api/oms/athletes/{id}:
    get:
      tags:
        - Athlete
      summary: Retrieves Athlete Information.
      description: 'Get the Athlete Information using the Person ID for the record you want.'
      operationId: uploadFile
      parameters:
        - name: id
          in: path
          description: Represents the SWIMS unique person identifier for a member. This is a GUID value.

          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: Athlete was found and data is being returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Athlete'
      security:
        - swims_auth:
            - read:athlete

servers:
  - url: https://swimsmember.org/api/
components:
  requestBodies:
    Athlete:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Athlete'
      description: Pet object that needs to be added to the store
      required: true
  securitySchemes:
    swims_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://swims.com/oauth/authorize
          scopes:
            read:athlete: read your athlete
  schemas:
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
    Athlete:
      type: object
      properties:
        personId:
          type: string
          format: guid
          description: The SWIMS unique identifier for the person. This is the same as the {id} value submitted with the reques.
        usasId:
          type: string
          description: The USA Swimming ID for the athlete
          example: 082202ROBKSMIT
        firstName:
          type: string
          description: Athlete's first name
          example: Robert
        preferredName:
          type: string
          description: Athlete's preferred name
          example: Bob
        lastName:
          type: string
          description: Athlete's last name
          example: Smith
        middleName:
          type: string
          description: Athlete's middle name
          example: Ken
        suffixName:
          type: string
          description: Athlete's suffix name
          example: Jr.
        birthDate:
          type: string
          description: (javascript)	Athleteâ€™s Birth Date
          example: 2002-08-22
        gender:
          type: string
          description: Athletes Gender
          example: M	F
        lscId:
          type: string
          description: The current LSC the athlete is assigned to.
          example: CO
        clubCode:
          type: string
          description: The current Club Code that the athlete is assigned to within the LSC.
          example: AQUA
        address1:
          type: string
          description: First address line for the athlete
          example: 100 Main St.
        address2:
          type: string
          description: Second address line for the athlete
          example: Apt. 101
        city:
          type: string
          description: City for the athlete
          example: Colorado Springs
        stateCode:
          type: string
          description: State Code for the athlete
          example: CO
        postalCode:
          type: string
          description: First 5 characters of the USA ZIP code
          example: 80108
        postalCodeExt:
          type: string
          description: USA Zip code 4 character extension
          example: 7002
        homePhoneNumber:
          type: string
          description: Home phone number
          example: 3039417777
        workPhoneNumber:
          type: string
          description: Work Phone
          example: 3033334444
        mobilePhoneNumber:
          type: string
          description: Mobile phone number
          example: 3034445555
