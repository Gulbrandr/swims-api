---
swagger: '2.0'
info:
  title: Third Party API
  version: v1
  x-description: |
    # General API:
      ## Authentication:

      | Requirement |  |
      |---|---|
      | Static IP | The Vendor will submit a Static IP, that all API Request will go through. |
      | Submit: TLS/SSL Cert | The Vendor will SUBMIT a TLS/SSL Cert that will be submitted with each request. |
      | Request: TLS/SSL Cert | The Vendor will REQUEST and be PROVIDED with a Certificate that will be submitted with each request |

      <!-- ReDoc-Inject: <security-definitions> -->

    ## Request
      
    ## Responses
      This is a list of HTTP response status codes common to all API requests. See the individual API documentation below for additional HTTP response status codes specific to each API.
      |     Response Code                  |     Description                                                                                        |
      |------------------------------------|--------------------------------------------------------------------------------------------------------|
      |     400 Bad Request                |     API version is missing or incorrect.     {"message": "Invalid Version‚Äù}                            |
      |     400 Bad Request                |     Invalid version number     {"message": "Invalid Version"}                                          |
      |     400 Bad Request                |     The api-user-name header is missing     {"message": "api-user-name header   value is required"}    |
      |     401 Unauthorized               |     The vendor-key, vendor-secret, or auth-key is invalid                                              |
      |     401 Unauthorized               |     The club has revoked access for the vendor.                                                        |
      |     500 Internal Server Error      |     An error occurred within   the API while   processing the request                                  |
paths:
  '/swims/OmsAthlete/clubRoster/orgUnit/{orgUnitId}':
    get:
      tags:
        - OmsAthlete
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: orgUnitId
          required: true
          type: integer
          format: int32
        - in: query
          name: memberId
          type: string
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              '$ref': '#/definitions/OmsAthleteDetail'
  '/swims/OmsAthlete/registrationInfo/orgUnitId/{orgUnitId}/memberId/{memberId}':
    get:
      tags:
        - OmsAthlete
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - in: path
          name: orgUnitId
          required: true
          type: integer
          format: int32
        - in: path
          name: memberId
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            '$ref': '#/definitions/OmsAthleteRegInfo'
definitions:
  OmsAthleteDetail:
    type: object
    properties:
      memberId:
        type: string
      oldUsasId:
        type: string
      firstName:
        type: string
      preferredName:
        type: string
      middleName:
        type: string
      lastName:
        type: string
      birthDate:
        format: date-time
        type: string
      registrations:
        type: array
        items:
          '$ref': '#/definitions/OmsAthleteReg'
  OmsAthleteReg:
    type: object
    properties:
      registrationDate:
        format: date-time
        type: string
      offeringId:
        format: int32
        type: integer
      usasFee:
        format: double
        type: number
      lscFee:
        format: double
        type: number
      isRenewal:
        type: boolean
  OmsAthleteRegDetails:
    type: object
    properties:
      registrationDate:
        format: date-time
        type: string
      offeringId:
        format: int32
        type: integer
      usasFee:
        format: double
        type: number
      lscFee:
        format: double
        type: number
      isRenewal:
        type: boolean
      memberGoodStandingExpirationDate:
        format: date-time
        type: string
  OmsAthleteRegInfo:
    type: object
    properties:
      memberId:
        type: string
      oldUsasId:
        type: string
      firstName:
        type: string
      preferredName:
        type: string
      middleName:
        type: string
      lastName:
        type: string
      birthDate:
        format: date-time
        type: string
      registrations:
        type: array
        items:
          '$ref': '#/definitions/OmsAthleteRegDetails'
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description:
      "JWT Authorization header using the Bearer scheme.\r\n    You can
      generate a token by navigating to the following URL and entering valid credentials:
      <br><br>\r\n    <a href='https://security-api.swimsmember.org/security/Auth/Authorize?retUrl=www.google.com'
      target='_blank' >Login</a> <br><br>\r\n    Copy the token returned and then
      type 'Bearer' [space] and then paste your token in the text input below.\r\n
      \   Example: 'Bearer 12345abcdef'"
security:
  - Bearer: []
